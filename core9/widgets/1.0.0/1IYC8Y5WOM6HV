// Core9 - Module: module-cms-widgets
angular.module("core9Dashboard.pagemodel",["ui.router","core9Dashboard.config","core9Dashboard.menu"]).config(["$stateProvider",function(a){a.state("pagemodels",{url:"/config/pagemodels",views:{main:{controller:"PageModelsCtrl",templateUrl:"pagemodel/pagemodels.tpl.html"}},data:{pageTitle:"PageModels"}}).state("pagemodel",{url:"/config/pagemodels/:id",views:{main:{templateUrl:"pagemodel/pagemodel.tpl.html",controller:"PageModelsModelCtrl"}},data:{pageTitle:"PageModels"}})}]).controller("PageModelsCtrl",["$scope","$http","$state","ConfigFactory",function(a,b,c,d){a.pagemodels=d.query({configtype:"pagemodel"}),a.add=function(b){var e=new d({configtype:"pagemodel"});e.name=b,e.$save(function(b){a.pagemodels.push(b),c.go("pagemodel",{id:b._id})})},a.refresh=function(){b.post("/admin/pagemodel").success(function(){alert("All templates reloaded.")}).error(function(b){a.$emit("$error",b.error)})},a.edit=function(a){c.go("pagemodel",{id:a._id})},a.remove=function(b){b.$remove(function(){a.pagemodels=d.query({configtype:"pagemodel"})})}}]).controller("PageModelsModelCtrl",["$scope","$http","ConfigFactory","$stateParams",function(a,b,c,d){a.pagemodel=c.get({configtype:"pagemodel",id:d.id}),b.get("/admin/widget").success(function(b){a.widgets=b,a.newComponent={name:a.widgets[0],globals:{}}}),a.save=function(){a.pagemodel.$update(function(){b.post("/admin/pagemodel").success(function(){alert("reloaded")}).error(function(b){a.$emit("$error",b.error)})})},a.addComponent=function(){void 0===a.pagemodel.components&&(a.pagemodel.components=[]),a.pagemodel.components.push(a.newComponent),a.newComponent={name:a.widgets[0],globals:{}}},a.removeComponent=function(b){a.pagemodel.components.splice(b,1)}}]).run(["MenuService",function(a){a.add("config",{title:"PageModels",weight:150,link:"/config/pagemodels"})}]),angular.module("core9Dashboard.widgets",["core9Dashboard.widget","core9Dashboard.pagemodel","templates-plugin-widgets"]),angular.module("templates-module-cms-widgets",["pagemodel/pagemodel.tpl.html","pagemodel/pagemodels.tpl.html","widget/widget.tpl.html","widget/widgetlist.tpl.html"]),angular.module("pagemodel/pagemodel.tpl.html",[]).run(["$templateCache",function(a){a.put("pagemodel/pagemodel.tpl.html",'<div class="page-header">\n  <h1>PageModels {{model.name}}<small><i class="icon-double-angle-right"></i> manage your page models</small></h1>\n</div>\n<div>\n	<div class="input-group">\n		<span class="input-group-addon">Name</span>\n		<input type="text" class="form-control" ng-model="pagemodel.name" />\n	</div>\n	<div class="input-group">\n		<span class="input-group-addon">Template name</span>\n		<input type="text" class="form-control" ng-model="pagemodel.templateName" />\n	</div>\n	<div class="input-group">\n		<span class="input-group-addon">Path</span>\n		<input type="text" class="form-control" ng-model="pagemodel.path" />\n	</div>\n	<fieldset>\n		<legend>Components</legend>\n		<div ng-repeat="component in pagemodel.components track by $index">\n			<div class="input-group">\n				<span class="input-group-addon">Widget</span>\n				<button type="button" class="form-control btn btn-default dropdown-toggle">{{component.name}}</button>\n				<ul class="dropdown-menu selectbox">\n					<li ng-repeat="(component, options) in widgets"><a ng-click="pagemodel.components[$parent.$index].name = component">{{component}}</a></li>\n				</ul>\n				<span class="input-group-btn">\n					<button class="btn btn-warning" ng-click="edit = !edit"><i class="fa fa-pencil"></i> Settings</button>\n					<button class="btn btn-danger" ng-click="removeComponent($index)"><i class="fa fa-trash-o"></i> Remove</button>\n				</span>\n			</div>\n			<div class="input-group" ng-if="edit">\n				<span class="input-group-addon">Settings</span>\n				<div class="form-control">\n					<fieldset>\n						<legend>Widget settings</legend>\n						<p>If your widget has options, you can set them here</p>\n					</fieldset>\n					<fieldset ng-if="widgets[component.name].options !== null">\n						<legend>Globals</legend>\n						<div class="input-group" ng-repeat="(key, entry) in widgets[component.name].options" ng-if="entry.global">\n							<span class="input-group-addon">{{key}}</span>\n							<input type="text" class="form-control" ng-model="component.globals[key]" />\n						</div>\n						<div ng-repeat="bundle in widgets[component.name].options.components">\n							<div class="input-group" ng-repeat="(key, value) in bundle.globals" ng-if="value.substr(0,1) === \':\'">\n								<span class="input-group-addon">{{value.substr(1)}}</span>\n								<input type="text" class="form-control" ng-model="component.globals[value.substr(1)]" />\n							</div>\n						</div>\n					</fieldset>\n				</div>\n			</div>\n		</div>\n		<div class="input-group">\n			<span class="input-group-addon">Add component</span>\n			<button type="button" class="form-control btn btn-default dropdown-toggle">{{newComponent.name}}</button>\n			<ul class="dropdown-menu selectbox">\n				<li ng-repeat="(component, options) in widgets"><a ng-click="newComponent.name = component">{{component}}</a></li>\n			</ul>\n			<span class="input-group-btn">\n				<button class="btn btn-success" ng-click="addComponent()">Add</button>\n			</span>\n		</div>\n	</fieldset>\n	<fieldset>\n		<legend>Actions</legend>\n		<button class="btn btn-success" ng-click="save()">Save</button>\n	</fieldset>\n</div>')}]),angular.module("pagemodel/pagemodels.tpl.html",[]).run(["$templateCache",function(a){a.put("pagemodel/pagemodels.tpl.html",'<div class="page-header">\n  <h1>PageModels<small><i class="icon-double-angle-right"></i> manage your page models</small></h1>\n</div>\n<div>\n	<p>A pagemodel is a collection of components. The collection is visible on a specific path (with optional params).</p>\n	<button class="btn btn-success" ng-click="refresh()">Refresh all pagemodels</button>\n<div>\n	<div>\n		<fieldset>\n			<legend>Pagemodels</legend>\n			<table>\n				<tr>\n					<th>Name</th>\n					<th>Actions</th>\n				</tr>\n				<tr ng-repeat="pagemodel in pagemodels">\n					<td>{{pagemodel.name}}</td>\n					<td>\n						<button class="btn btn-success" ng-click="edit(pagemodel)"><i class="fa fa-pencil"></i></button>\n						<button class="btn btn-danger" ng-click="remove(pagemodel)"><i class="fa fa-trash-o"></i></button>\n					</td>\n				</tr>\n				<tr>\n					<td><input type="text" placeholder="name" ng-model="newName" /></td>\n					<td><button class="btn btn-success" ng-click="add(newName)"><i class="icon-plus"></i> New pagemodel</button></td>\n				</tr>\n			</table>\n		</fieldset>\n	</div>\n</div>')}]),angular.module("widget/widget.tpl.html",[]).run(["$templateCache",function(a){a.put("widget/widget.tpl.html",'<div class="page-header">\n	<h1>Widget {{widget.name}}<small><i class="icon-double-angle-right"></i> manage your widgets</small></h1>\n</div>\n<div>\n	<div class="input-group">\n		<span class="input-group-addon">Name</span>\n		<input type="text" class="form-control" ng-model="widget.name" />\n	</div>\n	<fieldset>\n		<legend>Template</legend>\n		<div class="input-group">\n			<span class="input-group-addon">Template name</span>\n			<input type="text" class="form-control" ng-model="widget.templateName" />\n		</div>\n		<div class="input-group">\n			<span class="input-group-addon">Template</span>\n			<div class="form-control" style="padding: 0 4px 0 0;">\n				<div ui-codemirror="editorOptions" name="template" ng-model="widget.template">{{widget.template}}</div>\n			</div>\n		</div>\n		<div class="input-group">\n			<span class="input-group-addon">Editor options</span>\n			<div class="form-control">\n				<button type="button" class="btn btn-success" ng-click="editorOptions.fullScreen = true">Fullscreen</button>\n			</div>\n		</div>\n	</fieldset>\n	<fieldset ng-if="widget.type !== \'collection\'">\n		<legend>Datahandler</legend>\n		<div class="input-group">\n			<span class="input-group-addon">Datahandler</span>\n			<button type="button" class="btn btn-default form-control dropdown-toggle">{{widget.handler}}<span class="caret"></span>\n			</button>\n			<ul class="dropdown-menu selectbox">\n				<li ng-repeat="handler in datahandlers"><a ng-click="widget.handler = handler">{{handler}}</a></li>\n			</ul>\n		</div>\n		<div ng-if="schema !== undefined && widget.handler !== \'Bundle\'" >\n			<div cn-schema-generator cn-schema="schema" cn-options="schemaOptions" cn-data="widget.handleroptions" />\n		</div>\n		<fieldset ng-if="widget.handler === \'Bundle\'">\n			<legend>Components</legend>\n			<div ng-repeat="component in widget.handleroptions.components track by $index">\n				<div class="input-group">\n					<span class="input-group-addon">Widget</span>\n					<button type="button" class="form-control btn btn-default dropdown-toggle">{{component.name}}</button>\n					<ul class="dropdown-menu selectbox">\n						<li ng-repeat="(component, options) in widgets"><a ng-click="widget.handleroptions.[$parent.$index] = component">{{component}}</a></li>\n					</ul>\n					<span class="input-group-btn">\n						<button class="btn btn-warning" ng-click="edit = !edit"><i class="fa fa-pencil"></i> Settings</button>\n						<button class="btn btn-danger" ng-click="removeComponent($index)"><i class="fa fa-trash-o"></i> Remove</button>\n					</span>\n				</div>\n				<div class="input-group" ng-if="edit">\n					<span class="input-group-addon">Settings</span>\n					<div class="form-control">\n						<fieldset>\n							<legend>Widget settings</legend>\n							<p>If your widget has options, you can set them here</p>\n						</fieldset>\n						<div class="input-group">\n							<span class="input-group-addon">ID</span>\n							<input type="text" class="form-control" ng-model="component.id" />\n						</div>\n						<fieldset ng-if="widgets[component.name].options !== null">\n						<legend>Globals</legend>\n						<div class="input-group" ng-repeat="(key, entry) in widgets[component.name].options" ng-if="entry.global">\n							<span class="input-group-addon">{{key}}</span>\n							<input type="text" class="form-control" ng-model="component.globals[key]" />\n						</div>\n					</fieldset>\n					</div>\n				</div>\n			</div>\n			<div class="input-group">\n				<span class="input-group-addon">Add component</span>\n				<button type="button" class="form-control btn btn-default dropdown-toggle">{{newComponent.name}}</button>\n				<ul class="dropdown-menu selectbox">\n					<li ng-repeat="(component, options) in widgets"><a ng-click="newComponent.name = component">{{component}}</a></li>\n				</ul>\n				<span class="input-group-btn">\n					<button class="btn btn-success" ng-click="addComponent()">Add</button>\n				</span>\n			</div>\n		</fieldset>\n	</fieldset>\n	<fieldset>\n		<legend>Actions</legend>\n		<button class="btn btn-success" ng-click="save()">Save</button>\n	</fieldset>\n	<div class="close-fullscreen clearfix" ng-show="editorOptions.fullScreen === true">\n		<button type="button" class="btn btn-success" ng-click="save()">Save</button>\n		<button type="button" class="btn btn-danger" ng-click="editorOptions.fullScreen = false;">&times;</button>\n	</div>\n</div>')}]),angular.module("widget/widgetlist.tpl.html",[]).run(["$templateCache",function(a){a.put("widget/widgetlist.tpl.html",'<div class="page-header">\n	<h1>Widgets<small><i class="icon-double-angle-right"></i> manage your widgets</small></h1>\n</div>\n<div>\n	<p>A widget is a reusable component of the website</p>\n	<button class="btn btn-success" ng-click="refresh()">Refresh all widgets</button>\n</div>\n<div>\n	<div>\n		<fieldset>\n			<legend>Widgets</legend>\n			<table>\n				<tr>\n					<th>Name</th>\n					<th>Actions</th>\n				</tr>\n				<tr ng-repeat="widget in widgets">\n					<td>{{widget.name}}</td>\n					<td>\n						<button class="btn btn-success" ng-click="edit(widget)"><i class="fa fa-pencil"></i></button>\n						<button class="btn btn-danger" ng-click="remove(widget)"><i class="fa fa-trash-o"></i></button>\n					</td>\n				</tr>\n				<tr>\n					<td><input type="text" placeholder="name" ng-model="newName" /></td>\n					<td><button class="btn btn-success" ng-click="add(newName)"><i class="icon-plus"></i> New widget</button></td>\n				</tr>\n			</table>\n		</fieldset>\n	</div>\n</div>\n')}]),angular.module("core9Dashboard.widget",["ui.router","core9Dashboard.config","core9Dashboard.menu","core9.formgenerator","ui.codemirror"]).config(["$stateProvider",function(a){a.state("widgets",{url:"/config/widgets",views:{main:{controller:"ConfigWidgetListCtrl",templateUrl:"widget/widgetlist.tpl.html"}},data:{pageTitle:"Widgets"}}).state("widgetsitem",{url:"/config/widgets/:id",views:{main:{controller:"ConfigWidgetCtrl",templateUrl:"widget/widget.tpl.html"}},data:{pageTitle:"Widget"}})}]).factory("DataHandlers",["$q","$http",function(a,b){var c=[],d={};return this.retrieveDataHandlers=function(){var d=a.defer();return c.length>0?d.resolve(c):b.get("/admin/widget/datahandler").success(function(a){c=a,d.resolve(c)}),d.promise},this.retrieveHandlerSchema=function(c){var e=a.defer();return void 0!==d[c]?e.resolve(d[c]):b.get("/admin/widget/datahandler/"+c).success(function(a){d[c]=a,e.resolve(d[c])}),e.promise},this}]).controller("ConfigWidgetListCtrl",["$scope","$http","$state","ConfigFactory",function(a,b,c,d){a.widgets=d.query({configtype:"widget"}),a.add=function(b){var e=new d({configtype:"widget"});e.name=b,e.handleroptions={},e.$save(function(b){a.widgets.push(b),c.go("widgetsitem",{id:b._id})})},a.refresh=function(){b.post("/admin/widget").success(function(){alert("reloaded")}).error(function(b){a.$emit("$error",b.error)})},a.edit=function(a){c.go("widgetsitem",{id:a._id})},a.remove=function(b){b.$remove(function(){a.widgets=d.query({configtype:"widget"})})}}]).controller("ConfigWidgetCtrl",["$scope","$state","$http","ConfigFactory","$stateParams","DataHandlers",function(a,b,c,d,e,f){c.get("/admin/widget").success(function(b){a.widgets=b,a.newComponent={name:a.widgets[0],globals:{}}}),a.widget=d.get({configtype:"widget",id:e.id}),a.editorOptions={mode:"htmlmixed",fullScreen:!1,smartIndent:!1,lineWrapping:!0,lineNumbers:!0},f.retrieveDataHandlers().then(function(b){a.datahandlers=b}),a.save=function(){a.widget.$update(function(){c.post("/admin/widget").success(function(){alert("reloaded")}).error(function(b){a.$emit("$error",b.error)})})},a.addComponent=function(){void 0===a.widget.handleroptions.components&&(a.widget.handleroptions.components=[]),a.widget.handleroptions.components.push(a.newComponent),a.newComponent={name:a.widgets[0],globals:{}}},a.removeComponent=function(b){a.widget.handleroptions.components.splice(b,1)},a.$watch("widget.handler",function(b,c){void 0!==a.widget.handler&&(b!==c&&void 0!==c&&(a.widget.handleroptions={}),f.retrieveHandlerSchema(a.widget.handler).then(function(b){a.schema=null===b.schema?{}:b.schema,a.schemaOptions=null===b.options?{}:b.options}))})}]).run(["MenuService",function(a){a.add("config",{title:"Widgets",weight:200,link:"/config/widgets"})}]);