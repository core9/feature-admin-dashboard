// Core9 - Module: module-cms-widgets
angular.module("core9Dashboard.pagemodel",["ui.router","core9Dashboard.config","core9Dashboard.menu"]).config(["$stateProvider",function(a){a.state("pagemodels",{url:"/config/pagemodels",views:{main:{controller:"PageModelsCtrl",templateUrl:"pagemodel/pagemodels.tpl.html"}},data:{pageTitle:"PageModels",sidebar:"config",context:"pagemodels"}}).state("pagemodel",{url:"/config/pagemodels/:id",views:{main:{templateUrl:"pagemodel/pagemodel.tpl.html",controller:"PageModelsModelCtrl"}},data:{pageTitle:"PageModels",sidebar:"config",context:"pagemodels"}})}]).controller("PageModelsCtrl",["$scope","$http","$state","ConfigFactory",function(a,b,c,d){function e(a,b){var c=a.name.indexOf("/");if(-1===c)void 0===b.pagemodels&&(b.pagemodels=[]),b.pagemodels.push(a);else{void 0===b.folders&&(b.folders={});var d="/"+a.name.substring(0,c);void 0===b.folders[d]&&(b.folders[d]={}),a.name=a.name.substring(c+1),e(a,b.folders[d])}}a.pagemodelsFolder="",a.handlePageModelsData=function(b){a.pagemodels=[];for(var c=b.length,d=0;c>d;d++)e(b[d],a.pagemodels);a.pagemodelList=a.pagemodels},a.switchTo=function(b){if(".."===b?a.pagemodelsFolder=a.pagemodelsFolder.substring(0,a.pagemodelsFolder.lastIndexOf("/")):a.pagemodelsFolder+=b,""===a.pagemodelsFolder)a.pagemodelList=a.pagemodels;else for(var c=a.pagemodelsFolder.split("/"),d=0;d<c.length;d++)a.pagemodelList=""===c[d]?a.pagemodels:a.pagemodelList.folders["/"+c[d]]},d.query({configtype:"pagemodel"},a.handlePageModelsData),a.add=function(b){var e=new d({configtype:"pagemodel"});e.name=""===a.pagemodelsFolder||"/"===a.pagemodelsFolder?b:a.pagemodelsFolder.substring(1)+"/"+b,e.$save(function(b){a.pagemodels.push(b),c.go("pagemodel",{id:b._id})})},a.refresh=function(){b.post("/admin/pagemodel").success(function(){alert("All templates reloaded.")}).error(function(b){a.$emit("$error",b.error)})},a.edit=function(a){c.go("pagemodel",{id:a._id})},a.remove=function(b){b.$remove(function(){d.query({configtype:"pagemodel"},a.handlePageModelsData),a.refresh()})}}]).controller("PageModelsModelCtrl",["$scope","$http","ConfigFactory","$stateParams",function(a,b,c,d){a.pagemodel=c.get({configtype:"pagemodel",id:d.id}),a.$watch("pagemodel.name",function(b,c){(void 0===a.pagemodel.templateName||a.pagemodel.templateName===c)&&(a.pagemodel.templateName=a.pagemodel.name)}),b.get("/admin/widget").success(function(b){a.widgets=b,a.newComponent={id:"",name:"Select a new widget",globals:{}}}),a.save=function(){a.pagemodel.$update(function(){b.post("/admin/pagemodel").success(function(){alert("reloaded")}).error(function(b){a.$emit("$error",b.error)})})},a.addComponent=function(){void 0===a.pagemodel.components&&(a.pagemodel.components=[]),a.pagemodel.components.push(a.newComponent),a.newComponent={name:a.widgets[0],globals:{}}},a.removeComponent=function(b){a.pagemodel.components.splice(b,1)},a.addPermission=function(b){void 0===a.pagemodel.permissions&&(a.pagemodel.permissions=[]),a.pagemodel.permissions.push(b)},a.addRole=function(b){void 0===a.pagemodel.roles&&(a.pagemodel.roles=[]),a.pagemodel.roles.push(b)}}]).run(["MenuService",function(a){a.add("config",{title:"PageModels",weight:150,link:"pagemodels"}),a.add("pagemodels",{title:"Refresh",weight:0,template:'<a href="" ng-controller="PageModelsCtrl" ng-click="refresh()">Refresh pagemodels</a>'})}]),angular.module("core9Dashboard.widgets",["core9Dashboard.widget","core9Dashboard.pagemodel","templates-module-cms-widgets"]),angular.module("core9Dashboard.admin.dashboard").requires.push("core9Dashboard.widgets"),angular.module("templates-module-cms-widgets",["pagemodel/pagemodel.tpl.html","pagemodel/pagemodels.tpl.html","widget/widget.tpl.html","widget/widgetlist.tpl.html"]),angular.module("pagemodel/pagemodel.tpl.html",[]).run(["$templateCache",function(a){a.put("pagemodel/pagemodel.tpl.html",'<h1 class="page-header">PageModels {{model.name}}<small><i class="icon-double-angle-right"></i> manage your page models</small></h1>\n<div class="form-group row">\n  <label class="col-md-2 control-label">Name</label>  \n  <div class="col-md-8">\n    <input ng-model="pagemodel.name" type="text" class="form-control input-md" />\n    <span class="help-block">A unique name for the pagemodel</span>\n  </div>\n</div>\n<div class="form-group row">\n  <label class="col-md-2 control-label">Template name</label>  \n  <div class="col-md-8">\n    <input ng-model="pagemodel.templateName" type="text" class="form-control input-md" />\n    <span class="help-block">A unique name for the template</span>\n  </div>\n</div>\n<div class="form-group row">\n  <label class="col-md-2 control-label">Path</label>  \n  <div class="col-md-8">\n    <input ng-model="pagemodel.path" type="text" class="form-control input-md" />\n    <span class="help-block">The path under which the pagemodel will be visible</span>\n  </div>\n</div>\n<div class="form-group row">\n  <label class="col-md-2 control-label">Permissions</label>  \n  <div class="col-md-8">\n    <table class="table table-striped">\n      <tr>\n        <th>Name</th>\n        <th>Actions</th>\n      </tr>\n      <tr ng-repeat="permission in pagemodel.permissions">\n        <td>{{permission}}</td>\n        <td><button class="btn btn-danger" ng-click="pagemodel.permissions.splice($index, 1)"><i class="fa fa-trash-o"></i></button></td>\n      </tr>\n      <tr>\n        <td><input ng-model="newPermission" type="text" class="form-control input-md" /></td>\n        <td><button class="btn btn-success" ng-click="addPermission(newPermission)"><i class="fa fa-plus"></i></button></td>\n      </tr>\n    </table>\n    <span class="help-block">The permissions which are allowed to view this page.</span>\n  </div>\n</div>\n<div class="form-group row">\n  <label class="col-md-2 control-label">Roles</label>  \n  <div class="col-md-8">\n    <table class="table table-striped">\n      <tr>\n        <th>Name</th>\n        <th>Actions</th>\n      </tr>\n      <tr ng-repeat="role in pagemodel.roles">\n        <td>{{role}}</td>\n        <td><button class="btn btn-danger" ng-click="pagemodel.roles.splice($index, 1)"><i class="fa fa-trash-o"></i></button></td>\n      </tr>\n      <tr>\n        <td><input ng-model="newRole" type="text" class="form-control input-md" /></td>\n        <td><button class="btn btn-success" ng-click="addRole(newRole)"><i class="fa fa-plus"></i></button></td>\n      </tr>\n    </table>\n    <span class="help-block">The roles which are allowed to view this page.</span>\n  </div>\n</div>\n\n<fieldset>\n	<legend>Components</legend>\n  <div ng-repeat="component in pagemodel.components track by $index" class="form-group row">\n    <label class="col-md-2 control-label">Widget</label>  \n    <div class="col-md-8 input-group">\n      <button type="button" class="form-control btn btn-default dropdown-toggle">{{component.name}}</button>\n      <ul class="dropdown-menu selectbox">\n        <li ng-repeat="(id, component) in widgets"><a ng-click="pagemodel.components[$parent.$index].name = component.name; pagemodel.components[$parent.$index].id = component.id">{{component.name}}</a></li>\n      </ul>\n      <span class="input-group-btn">\n        <button class="btn btn-warning" ng-click="edit = !edit"><i class="fa fa-pencil"></i> Settings</button>\n        <button class="btn btn-danger" ng-click="removeComponent($index)"><i class="fa fa-trash-o"></i> Remove</button>\n      </span>\n    </div>\n\n    <div class="col-md-8 col-md-offset-2 input-group" ng-if="edit">\n      <fieldset>\n        <legend>Widget settings</legend>\n        <blockquote>If your widget has options, you can set them here</blockquote>\n        <fieldset ng-if="widgets[component.name].options !== null">\n          <legend>Globals</legend>\n          <div class="form-group" ng-repeat="(key, entry) in widgets[component.name].options" ng-if="entry.global">\n            <label class="col-md-2 control-label">{{key}}</label>\n            <div class="col-md-8">\n              <input type="text" class="form-control input-md" ng-model="component.globals[key]" />\n            </div>\n          </div>\n          <div ng-repeat="bundle in widgets[component.name].options.components">\n            <div class="form-group" ng-repeat="(key, value) in bundle.globals" ng-if="value.substr(0,1) === \':\'">\n              <label class="col-md-2 control-label">{{value.substr(1)}}</label>  \n              <div class="col-md-8">\n                <input type="text" class="form-control input-md" ng-model="component.globals[value.substr(1)]" />\n              </div>\n            </div>\n          </div>\n        </fieldset>\n      </fieldset>\n    </div>\n  </div>\n\n  <div class="form-group row">\n    <label class="col-md-2 control-label">Add component</label>\n    <div class="col-md-8 input-group">\n      <button type="button" class="form-control btn btn-default dropdown-toggle">{{newComponent.name}}</button>\n      <ul class="dropdown-menu selectbox">\n        <li ng-repeat="(id, component) in widgets"><a ng-click="newComponent.id = id; newComponent.name = component.name">{{component.name}}</a></li>\n      </ul>\n      <span class="input-group-btn">\n        <button class="btn btn-success" ng-click="addComponent()">Add</button>\n      </span>\n    </div>\n  </div>\n</fieldset>\n<fieldset>\n  <legend>Actions</legend>\n  <button class="btn btn-success" ng-click="save()">Save</button>\n</fieldset>\n</div>')}]),angular.module("pagemodel/pagemodels.tpl.html",[]).run(["$templateCache",function(a){a.put("pagemodel/pagemodels.tpl.html",'<h1 class="page-header">PageModels<small><i class="icon-double-angle-right"></i> manage your page models</small></h1>\n<blockquote>A pagemodel is a collection of components. The collection is visible on a specific path (with optional params).</blockquote>\n<fieldset>\n	<legend>Pagemodels</legend>\n	<table class="table table-striped">\n		<tr>\n			<th>Name</th>\n			<th>Actions</th>\n		</tr>\n    <tr ng-if="pagemodelsFolder !== \'\'">\n      <td><a ng-click="switchTo(\'..\')"><i class="fa fa-folder-o"></i> ..</a></td>\n      <td>\n        <button class="btn btn-success" ng-click="switchTo(\'..\')"><i class="fa fa-folder-open-o"></i></button>\n      </td>\n    </tr>\n    <tr ng-repeat="(folder, widgets) in pagemodelList.folders">\n      <td><a ng-click="switchTo(folder)"><i class="fa fa-folder-o"></i> {{folder}}</a></td>\n      <td>\n        <button class="btn btn-success" ng-click="switchTo(folder)"><i class="fa fa-folder-open-o"></i></button>\n      </td>\n    </tr>\n		<tr ng-repeat="pagemodel in pagemodelList.pagemodels">\n			<td>{{pagemodel.name}}</td>\n			<td>\n				<button class="btn btn-success" ng-click="edit(pagemodel)"><i class="fa fa-pencil"></i></button>\n				<button class="btn btn-danger" ng-click="remove(pagemodel)"><i class="fa fa-trash-o"></i></button>\n			</td>\n		</tr>\n    <tr>\n      <td>\n        <div class="form-group">\n          <input ng-model="newName" type="text" placeholder="New pagemodel name" class="form-control input-md">\n        </div>\n      </td>\n      <td>\n        <button class="btn btn-success" ng-click="add(newName)"><i class="fa fa-plus"></i> New pagemodel</button>\n      </td>\n    </tr>\n	</table>\n</fieldset>')}]),angular.module("widget/widget.tpl.html",[]).run(["$templateCache",function(a){a.put("widget/widget.tpl.html",'<h1 class="page-header">Widget {{widget.name}}<small><i class="icon-double-angle-right"></i> manage your widgets</small></h1>\n<div class="form-group row">\n  <label class="col-md-2 control-label">Name</label>  \n  <div class="col-md-8">\n    <input ng-model="widget.name" type="text" class="form-control input-md" />\n    <span class="help-block">A unique name for the widget (use \'/\' to separate foldernames)</span>\n  </div>\n</div>\n<div class="form-group row">\n  <label class="col-md-2 control-label">Template name</label>  \n  <div class="col-md-8">\n    <input ng-model="widget.templateName" type="text" class="form-control input-md" />\n    <span class="help-block">The entry template for the widget</span>\n  </div>\n</div>\n<div class="form-group row">\n  <label class="col-md-2 control-label">Template</label>  \n  <div class="col-md-8">\n    <div ui-codemirror="editorOptions" name="template" ng-model="widget.template">{{widget.template}}</div>\n  </div>\n</div>\n<div class="form-group row">\n  <label class="col-md-2 control-label">Editor options</label>  \n  <div class="col-md-8">\n    <button type="button" class="btn btn-success" ng-click="editorOptions.fullScreen = true">Fullscreen</button>\n    <button type="button" class="btn btn-warning" ng-click="generateBoilerplate()">Boilerplate</button>\n  </div>\n</div>\n\n<fieldset ng-if="widget.type !== \'collection\'">\n	<legend>Datahandler</legend>\n  <div class="form-group row">\n    <label class="col-md-2 control-label">Datahandler</label>  \n    <div class="col-md-8">\n      <button type="button" class="btn btn-default form-control dropdown-toggle">{{widget.handler}}<span class="caret"></span></button>\n      <ul class="dropdown-menu selectbox">\n        <li ng-repeat="handler in datahandlers"><a ng-click="widget.handler = handler">{{handler}}</a></li>\n      </ul>\n    </div>\n  </div>\n\n	<div ng-if="schema !== undefined && widget.handler !== \'Bundle\'" >\n		<div cn-schema-generator cn-schema="schema" cn-options="schemaOptions" cn-data="widget.handleroptions" />\n	</div>\n\n  <fieldset ng-if="widget.handler === \'Bundle\'">\n		<legend>Components</legend>\n		<div ng-repeat="component in widget.handleroptions.components track by $index">\n      <div class="form-group row">\n        <label class="col-md-2 control-label">Widget</label>  \n        <div class="col-md-8">\n          <div class="input-group">\n            <button type="button" class="form-control btn btn-default dropdown-toggle">{{component.name}}</button>\n            <ul class="dropdown-menu selectbox">\n              <li ng-repeat="(component, options) in widgets"><a ng-click="widget.handleroptions.[$parent.$index] = component">{{component}}</a></li>\n            </ul>\n            <span class="input-group-btn">\n              <button class="btn btn-warning" ng-click="edit = !edit"><i class="fa fa-pencil"></i> Settings</button>\n              <button class="btn btn-danger" ng-click="removeComponent($index)"><i class="fa fa-trash-o"></i> Remove</button>\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <div class="col-md-8 col-md-offset-2 input-group" ng-if="edit">\n        <fieldset>\n          <legend>Widget settings</legend>\n          <blockquote>If your widget has options, you can set them here</blockquote>\n          <fieldset ng-if="widgets[component.name].options !== null">\n            <legend>Globals</legend>\n            <div class="form-group" ng-repeat="(key, entry) in widgets[component.name].options" ng-if="entry.global">\n              <label class="col-md-2 control-label">{{key}}</label>\n              <div class="col-md-8">\n                <input type="text" class="form-control input-md" ng-model="component.globals[key]" />\n              </div>\n            </div>\n            <div ng-repeat="bundle in widgets[component.name].options.components">\n              <div class="form-group" ng-repeat="(key, value) in bundle.globals" ng-if="value.substr(0,1) === \':\'">\n                <label class="col-md-2 control-label">{{value.substr(1)}}</label>  \n                <div class="col-md-8">\n                  <input type="text" class="form-control input-md" ng-model="component.globals[value.substr(1)]" />\n                </div>\n              </div>\n            </div>\n          </fieldset>\n        </fieldset>\n      </div>\n    </div>\n\n    <div class="col-md-8 col-md-offset-2 input-group">\n      <div class="row">\n        <label class="col-md-3 control-label">Add component</label>\n        <div class="col-md-9">\n          <div class="input-group">\n  				  <button type="button" class="form-control btn btn-default dropdown-toggle">{{newComponent.name}}</button>\n    				<ul class="dropdown-menu selectbox">\n    					<li ng-repeat="(component, options) in widgets"><a ng-click="newComponent.name = component">{{component}}</a></li>\n    				</ul>\n    				<span class="input-group-btn">\n    					<button class="btn btn-success" ng-click="addComponent()">Add</button>\n    				</span>\n          </div>\n        </div>\n			</div>\n		</div>\n	</fieldset>\n</fieldset>\n\n\n	<fieldset>\n		<legend>Actions</legend>\n		<button class="btn btn-success" ng-click="save()">Save</button>\n	</fieldset>\n	<div class="close-fullscreen clearfix" ng-show="editorOptions.fullScreen === true">\n		<button type="button" class="btn btn-success" ng-click="save()">Save</button>\n		<button type="button" class="btn btn-danger" ng-click="editorOptions.fullScreen = false;">&times;</button>\n	</div>\n</div>')}]),angular.module("widget/widgetlist.tpl.html",[]).run(["$templateCache",function(a){a.put("widget/widgetlist.tpl.html",'<h1 class="page-header">Widgets<small><i class="icon-double-angle-right"></i> manage your widgets</small></h1>\n<blockquote>A widget is a reusable component of the website</blockquote>\n<fieldset>\n  <legend>Widgets</legend>\n  <table class="table table-striped">\n    <tr>\n      <th>Name</th>\n      <th>Actions</th>\n    </tr>\n    <tr ng-if="widgetFolder !== \'\'">\n      <td><a ng-click="switchTo(\'..\')"><i class="fa fa-folder-o"></i> ..</a></td>\n      <td>\n        <button class="btn btn-success" ng-click="switchTo(\'..\')"><i class="fa fa-folder-open-o"></i></button>\n      </td>\n    </tr>\n    <tr ng-repeat="(folder, widgets) in widgetList.folders">\n      <td><a ng-click="switchTo(folder)"><i class="fa fa-folder-o"></i> {{folder}}</a></td>\n      <td>\n        <button class="btn btn-success" ng-click="switchTo(folder)"><i class="fa fa-folder-open-o"></i></button>\n      </td>\n    </tr>\n    <tr ng-repeat="widget in widgetList.widgets">\n      <td>{{widget.name}}</td>\n      <td>\n        <button class="btn btn-success" ng-click="edit(widget)"><i class="fa fa-pencil"></i></button>\n        <button class="btn btn-danger" ng-click="remove(widget)"><i class="fa fa-trash-o"></i></button>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <div class="form-group">\n          <input ng-model="newName" type="text" placeholder="New widget name" class="form-control input-md">\n        </div>\n      </td>\n      <td>\n        <button class="btn btn-success" ng-click="add(newName)"><i class="fa fa-plus"></i> New widget</button>\n      </td>\n    </tr>\n  </table>\n</fieldset>')}]),angular.module("core9Dashboard.widget",["ui.router","core9Dashboard.config","core9Dashboard.menu","core9.formgenerator","ui.codemirror"]).config(["$stateProvider",function(a){a.state("widgets",{url:"/config/widgets",views:{main:{controller:"ConfigWidgetListCtrl",templateUrl:"widget/widgetlist.tpl.html"}},data:{pageTitle:"Widgets",sidebar:"config",context:"widgets"}}).state("widgetsitem",{url:"/config/widgets/:id",views:{main:{controller:"ConfigWidgetCtrl",templateUrl:"widget/widget.tpl.html"}},data:{pageTitle:"Widgets",sidebar:"config",context:"widgets"}})}]).factory("DataHandlers",["$q","$http",function(a,b){var c=[],d={};return this.retrieveDataHandlers=function(){var d=a.defer();return c.length>0?d.resolve(c):b.get("/admin/widget/datahandler").success(function(a){c=a,d.resolve(c)}),d.promise},this.retrieveHandlerSchema=function(c){var e=a.defer();return void 0!==d[c]?e.resolve(d[c]):b.get("/admin/widget/datahandler/"+c).success(function(a){d[c]=a,e.resolve(d[c])}),e.promise},this}]).controller("ConfigWidgetListCtrl",["$scope","$http","$state","ConfigFactory",function(a,b,c,d){function e(a,b){var c=a.name.indexOf("/");if(-1===c)void 0===b.widgets&&(b.widgets=[]),b.widgets.push(a);else{void 0===b.folders&&(b.folders={});var d="/"+a.name.substring(0,c);void 0===b.folders[d]&&(b.folders[d]={}),a.name=a.name.substring(c+1),e(a,b.folders[d])}}a.widgetFolder="",a.handleWidgetData=function(b){a.widgets=[];for(var c=b.length,d=0;c>d;d++)e(b[d],a.widgets);a.widgetList=a.widgets},d.query({configtype:"widget"},a.handleWidgetData),a.switchTo=function(b){if(".."===b?a.widgetFolder=a.widgetFolder.substring(0,a.widgetFolder.lastIndexOf("/")):a.widgetFolder+=b,""===a.widgetFolder)a.widgetList=a.widgets;else for(var c=a.widgetFolder.split("/"),d=0;d<c.length;d++)a.widgetList=""===c[d]?a.widgets:a.widgetList.folders["/"+c[d]]},a.add=function(b){var e=new d({configtype:"widget"});e.name=""===a.widgetFolder||"/"===a.widgetFolder?b:a.widgetFolder.substring(1)+"/"+b,e.handleroptions={},e.$save(function(b){a.widgets.push(b),c.go("widgetsitem",{id:b._id})})},a.refresh=function(){b.post("/admin/widget").success(function(){alert("reloaded")}).error(function(b){a.$emit("$error",b.error)})},a.edit=function(a){c.go("widgetsitem",{id:a._id})},a.remove=function(b){b.$remove(function(){d.query({configtype:"widget"},a.handleWidgetData),a.refresh()})}}]).controller("ConfigWidgetCtrl",["$scope","$state","$http","ConfigFactory","$stateParams","DataHandlers",function(a,b,c,d,e,f){c.get("/admin/widget").success(function(b){a.widgets=b,a.newComponent={name:a.widgets[0],globals:{}}}),a.widget=d.get({configtype:"widget",id:e.id}),a.editorOptions={mode:"htmlmixed",fullScreen:!1,smartIndent:!1,lineWrapping:!0,lineNumbers:!0},f.retrieveDataHandlers().then(function(b){a.datahandlers=b}),a.save=function(){a.widget.$update(function(){c.post("/admin/widget").success(function(){alert("reloaded")}).error(function(b){a.$emit("$error",b.error)})})},a.generateBoilerplate=function(){var b=a.widget.templateName.lastIndexOf("."),c=a.widget.templateName.substring(0,b),d=a.widget.templateName.substring(b);a.widget.template="{namespace "+c+"}\n\n/**\n *\n */\n{template "+d+"}\nBody\n{/template}\n"},a.addComponent=function(){void 0===a.widget.handleroptions.components&&(a.widget.handleroptions.components=[]),a.widget.handleroptions.components.push(a.newComponent),a.newComponent={name:a.widgets[0],globals:{}}},a.removeComponent=function(b){a.widget.handleroptions.components.splice(b,1)},a.$watch("widget.handler",function(b,c){void 0!==a.widget.handler&&(b!==c&&void 0!==c&&(a.widget.handleroptions={}),f.retrieveHandlerSchema(a.widget.handler).then(function(b){a.schema=null===b.schema?{}:b.schema,a.schemaOptions=null===b.options?{}:b.options}))})}]).run(["MenuService",function(a){a.add("config",{title:"Widgets",weight:200,link:"widgets"}),a.add("widgets",{title:"Refresh",weight:0,template:'<a href="" ng-controller="ConfigWidgetListCtrl" ng-click="refresh()">Refresh widgets</a>'})}]);