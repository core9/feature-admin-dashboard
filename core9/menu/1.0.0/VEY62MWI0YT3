// Core9 - Module: module-platform-menu
angular.module("core9Dashboard.menueditor.app",["ui.router","ui.bootstrap","ui.sortable","core9Dashboard.config","core9Dashboard.menu"]).config(["$stateProvider",function(a){a.state("menueditor",{url:"/config/menueditor",views:{main:{controller:"MenuEditorCtrl",templateUrl:"menu-editor/menulist.tpl.html"}},data:{pageTitle:"Menu",sidebar:"config"}}).state("menueditormenu",{url:"/config/menueditor/:id",views:{main:{controller:"MenuEditorMenuCtrl",templateUrl:"menu-editor/menu.tpl.html"}},data:{pageTitle:"Menu",sidebar:"config"}})}]).factory("MenuEntryTypes",function(){var a={};return this.getMenuEntryTypes=function(){return a},this.getMenuEntryTypeTemplate=function(b){return a[b].templateUrl},this.getMenuEntryConfigTemplate=function(b){return a[b].configUrl},this.registerMenuEntryType=function(b){return a[b.id]=b,this},this}).directive("cnMenuItem",["$compile","$templateCache","MenuEntryTypes",function(a,b,c){return{replace:!0,scope:{item:"=cnItem",parent:"=cnParent",state:"=cnState",clazz:"@cnClass"},link:function(d,e){d.$watch("item.type",function(){if(void 0!==d.item.type){var f=a(b.get(c.getMenuEntryTypeTemplate(d.item.type)))(d);e.replaceWith(f)}}),d.edit=function(){d.state.parent=d.parent,d.state.showConfig=!1,d.state.showConfig=!0,d.state.editItem=d.item},d.sortableOptions={connectWith:"ul"}}}}]).directive("cnMenuItemConfig",["$compile","$templateCache","MenuEntryTypes",function(a,b,c){return{replace:!1,scope:{menu:"=cnMenu",state:"=cnState"},link:function(d,e){d.menuEntryTypes=c.getMenuEntryTypes(),d.$watch("state.editItem.type",function(){if(void 0!==d.state.editItem.type){d.newItem={type:c.getMenuEntryTypes()[d.state.editItem.type].childs[0]};var f=b.get(c.getMenuEntryConfigTemplate(d.state.editItem.type)),g=b.get("menueditor/entryactions.tpl.html"),h=a(f+g)(d);e.html(h)}}),d.addItem=function(){void 0===d.state.editItem.items&&(d.state.editItem.items=[]),d.state.editItem.items.push(d.newItem),d.newItem={type:d.newItem.type},d.refreshMenu()},d.remove=function(){var a=d.state.parent.items.indexOf(d.state.editItem);d.state.parent.items.splice(a,1),console.log(d.state.parent.items),d.state.parent=null,d.state.editItem=null,d.state.showConfig=!1,d.refreshMenu()},d.refreshMenu=function(){d.state.fresh=!1,d.state.fresh=!0}}}}]).controller("MenuEditorCtrl",["$scope","$state","ConfigFactory",function(a,b,c){a.menus=c.query({configtype:"menu"}),a.add=function(d){var e=new c({configtype:"menu"});e.name=d,e.type="nav",e.$save(function(c){a.menus.push(c),b.go("menueditormenu",{id:c._id})})},a.edit=function(a){b.go("menueditormenu",{id:a._id})},a.remove=function(b){b.$remove(function(){a.menus=c.query({configtype:"menu"})})}}]).controller("MenuEditorMenuCtrl",["$scope","$stateParams","ConfigFactory","MenuEntryTypes",function(a,b,c){a.state={fresh:!0},a.menu=c.get({configtype:"menu",id:b.id}),a.save=function(){a.menu.$update()},a.remove=function(){var b=a.state.parent.items.indexOf(a.state.editItem);console.log(b),b>-1&&a.state.parent.items.splice(b,1)}}]).run(["MenuService","MenuEntryTypes",function(a,b){b.registerMenuEntryType({id:"nav",name:"Menu",templateUrl:"menu-editor/entrytypes/nav.tpl.html",configUrl:"menu-editor/entrytypes/ul.config.tpl.html",childs:["navitem","li"]}).registerMenuEntryType({id:"navitem",name:"Top level entry",templateUrl:"menu-editor/entrytypes/navitem.tpl.html",configUrl:"menu-editor/entrytypes/li.config.tpl.html",childs:["ul","text"]}).registerMenuEntryType({id:"li",name:"List Item",templateUrl:"menu-editor/entrytypes/li.tpl.html",configUrl:"menu-editor/entrytypes/li.config.tpl.html",childs:["ul","text"]}).registerMenuEntryType({id:"ul",name:"List",templateUrl:"menu-editor/entrytypes/ul.tpl.html",configUrl:"menu-editor/entrytypes/ul.config.tpl.html",childs:["li"]}).registerMenuEntryType({id:"text",name:"Text",templateUrl:"menu-editor/entrytypes/text.tpl.html",configUrl:"menu-editor/entrytypes/text.config.tpl.html",childs:[]}),a.add("config",{title:"Menu",weight:150,link:"menueditor"})}]),angular.module("core9Dashboard.menuEditor",["ui.router","ui.bootstrap","ui.sortable","core9Dashboard.config","core9Dashboard.menu"]).config(["$stateProvider",function(a){a.state("menueditor",{url:"/config/menueditor",views:{main:{controller:"MenuEditorCtrl",templateUrl:"menu-editor/menulist.tpl.html"}},data:{pageTitle:"Menu",sidebar:"config"}}).state("menueditormenu",{url:"/config/menueditor/:id",views:{main:{controller:"MenuEditorMenuCtrl",templateUrl:"menu-editor/menu.tpl.html"}},data:{pageTitle:"Menu",sidebar:"config"}})}]).factory("MenuEntryTypes",function(){var a={};return this.getMenuEntryTypes=function(){return a},this.getMenuEntryTypeTemplate=function(b){return a[b].templateUrl},this.getMenuEntryConfigTemplate=function(b){return a[b].configUrl},this.registerMenuEntryType=function(b){return a[b.id]=b,this},this}).directive("cnMenuItem",["$compile","$templateCache","MenuEntryTypes",function(a,b,c){return{replace:!0,scope:{item:"=cnItem",parent:"=cnParent",state:"=cnState",clazz:"@cnClass"},link:function(d,e){d.$watch("item.type",function(){if(void 0!==d.item.type){var f=a(b.get(c.getMenuEntryTypeTemplate(d.item.type)))(d);e.replaceWith(f)}}),d.edit=function(){d.state.parent=d.parent,d.state.showConfig=!1,d.state.showConfig=!0,d.state.editItem=d.item},d.sortableOptions={connectWith:"ul"}}}}]).directive("cnMenuItemConfig",["$compile","$templateCache","MenuEntryTypes",function(a,b,c){return{replace:!1,scope:{menu:"=cnMenu",state:"=cnState"},link:function(d,e){d.menuEntryTypes=c.getMenuEntryTypes(),d.$watch("state.editItem.type",function(){if(void 0!==d.state.editItem.type){d.newItem={type:c.getMenuEntryTypes()[d.state.editItem.type].childs[0]};var f=b.get(c.getMenuEntryConfigTemplate(d.state.editItem.type)),g=b.get("menu-editor/entryactions.tpl.html"),h=a(f+g)(d);e.html(h)}}),d.addItem=function(){void 0===d.state.editItem.items&&(d.state.editItem.items=[]),d.state.editItem.items.push(d.newItem),d.newItem={type:d.newItem.type},d.refreshMenu()},d.remove=function(){var a=d.state.parent.items.indexOf(d.state.editItem);d.state.parent.items.splice(a,1),console.log(d.state.parent.items),d.state.parent=null,d.state.editItem=null,d.state.showConfig=!1,d.refreshMenu()},d.refreshMenu=function(){d.state.fresh=!1,d.state.fresh=!0}}}}]).controller("MenuEditorCtrl",["$scope","$state","ConfigFactory",function(a,b,c){a.menus=c.query({configtype:"menu"}),a.add=function(d){var e=new c({configtype:"menu"});e.name=d,e.type="nav",e.$save(function(c){a.menus.push(c),b.go("menueditormenu",{id:c._id})})},a.edit=function(a){b.go("menueditormenu",{id:a._id})},a.remove=function(b){b.$remove(function(){a.menus=c.query({configtype:"menu"})})}}]).controller("MenuEditorMenuCtrl",["$scope","$stateParams","ConfigFactory","MenuEntryTypes",function(a,b,c){a.state={fresh:!0},a.menu=c.get({configtype:"menu",id:b.id}),a.save=function(){a.menu.$update()},a.remove=function(){var b=a.state.parent.items.indexOf(a.state.editItem);console.log(b),b>-1&&a.state.parent.items.splice(b,1)}}]).run(["MenuService","MenuEntryTypes",function(a,b){b.registerMenuEntryType({id:"nav",name:"Menu",templateUrl:"menu-editor/entrytypes/nav.tpl.html",configUrl:"menu-editor/entrytypes/ul.config.tpl.html",childs:["navitem","li"]}).registerMenuEntryType({id:"navitem",name:"Top level entry",templateUrl:"menu-editor/entrytypes/navitem.tpl.html",configUrl:"menu-editor/entrytypes/li.config.tpl.html",childs:["ul","text"]}).registerMenuEntryType({id:"li",name:"List Item",templateUrl:"menu-editor/entrytypes/li.tpl.html",configUrl:"menu-editor/entrytypes/li.config.tpl.html",childs:["ul","text"]}).registerMenuEntryType({id:"ul",name:"List",templateUrl:"menu-editor/entrytypes/ul.tpl.html",configUrl:"menu-editor/entrytypes/ul.config.tpl.html",childs:["li"]}).registerMenuEntryType({id:"text",name:"Text",templateUrl:"menu-editor/entrytypes/text.tpl.html",configUrl:"menu-editor/entrytypes/text.config.tpl.html",childs:[]}),a.add("config",{title:"Menu",weight:150,link:"menueditor"})}]),angular.module("core9Dashboard.menueditor",["core9Dashboard.menueditor.app","templates-module-platform-menu"]),angular.module("core9Dashboard.admin.dashboard").requires.push("core9Dashboard.menueditor"),angular.module("templates-module-platform-menu",["menu-editor/entryactions.tpl.html","menu-editor/entrytypes/li.config.tpl.html","menu-editor/entrytypes/li.tpl.html","menu-editor/entrytypes/nav.tpl.html","menu-editor/entrytypes/navitem.tpl.html","menu-editor/entrytypes/text.config.tpl.html","menu-editor/entrytypes/text.tpl.html","menu-editor/entrytypes/ul.config.tpl.html","menu-editor/entrytypes/ul.tpl.html","menu-editor/menu.tpl.html","menu-editor/menulist.tpl.html"]),angular.module("menu-editor/entryactions.tpl.html",[]).run(["$templateCache",function(a){a.put("menu-editor/entryactions.tpl.html",'<fieldset>\n	<legend>Menu entry actions</legend>\n	<button class="btn btn-danger" ng-show="state.parent !== undefined" ng-click="remove()">Remove</button>\n	<button class="btn btn-warning" ng-click="state.showConfig = false">Close</button>\n</fieldset>')}]),angular.module("menu-editor/entrytypes/li.config.tpl.html",[]).run(["$templateCache",function(a){a.put("menu-editor/entrytypes/li.config.tpl.html",'<div class="form-group row">\n  <label class="col-md-2 control-label" for="">Name</label>  \n  <div class="col-md-8">\n    <input ng-model="state.editItem.name" type="text" placeholder="Name" class="form-control input-md" />\n  </div>\n</div>\n<div class="form-group row">\n  <label class="col-md-2 control-label" for="">Link</label>  \n  <div class="col-md-8">\n    <input ng-model="state.editItem.link" type="text" placeholder="Classes" class="form-control input-md" />\n  </div>\n</div>\n<div class="row">\n  <fieldset class="col-md-12">\n    <legend>New subitem</legend>\n    <div class="input-group">\n      <div class="input-group-btn">\n        <button type="button" class="btn btn-default dropdown-toggle">{{menuEntryTypes[newItem.type].name}} <span class="caret"></span></button>\n        <ul class="dropdown-menu">\n          <li ng-repeat="id in menuEntryTypes[state.editItem.type].childs track by $index"><a ng-click="newItem.type = id">{{menuEntryTypes[id].name}}</a></li>\n        </ul>\n      </div>\n      <input type="text" class="form-control" placeholder="New item name" ng-model="newItem.name" />\n      <div class="input-group-btn">\n        <button class="btn btn-success" ng-click="addItem(item, newItem)">Add item</button>\n      </div>\n    </div>\n  </fieldset>\n</div>')}]),angular.module("menu-editor/entrytypes/li.tpl.html",[]).run(["$templateCache",function(a){a.put("menu-editor/entrytypes/li.tpl.html",'<li>\n	<a class="{{(item.items.length > 0) ? \'dropdown-toggle\' : \'\'}}" ng-click="edit()">{{item.name}} <b ng-if="item.items.length > 0" class="caret"></b></a>\n	<div ng-repeat="inner in item.items" cn-menu-item cn-parent="item" cn-item="inner" cn-state="state" />\n</li>\n')}]),angular.module("menu-editor/entrytypes/nav.tpl.html",[]).run(["$templateCache",function(a){a.put("menu-editor/entrytypes/nav.tpl.html",'<div class="input-group" style="width: 100%">\n	<div class="navbar navbar-default yamm">\n		<div class="navbar-header">\n			<button type="button" data-toggle="collapse" data-target="#navbar-collapse-grid" class="navbar-toggle"><span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></button><a ng-click="edit()" class="navbar-brand">{{item.name}}</a>\n		</div>\n		<div class="navbar-collapse collapse">\n			<ul class="nav navbar-nav" ui-sortable ng-model="item.items">\n				<div ng-if="state.fresh" ng-repeat="inner in item.items" cn-menu-item cn-parent="item" cn-item="inner" cn-state="state"></div>\n			</ul>\n		</div>\n	</div>\n</div>\n\n\n')}]),angular.module("menu-editor/entrytypes/navitem.tpl.html",[]).run(["$templateCache",function(a){a.put("menu-editor/entrytypes/navitem.tpl.html",'<li class="dropdown yamm-fw">\n	<a class="{{(item.items.length > 0) ? \'dropdown-toggle\' : \'\'}}" ng-click="edit()">{{item.name}} <b ng-if="item.items.length > 0" class="caret"></b></a>\n	<ul ng-if="item.items.length > 0" class="dropdown-menu">\n		<li>\n			<div class="row yamm-content" ui-sortable ng-model="item.items">\n				<div ng-repeat="inner in item.items" cn-menu-item cn-parent="item" cn-item="inner" cn-state="state" />\n			</div>\n		</li>\n	</ul>\n</li>\n')}]),angular.module("menu-editor/entrytypes/text.config.tpl.html",[]).run(["$templateCache",function(a){a.put("menu-editor/entrytypes/text.config.tpl.html",'<div class="form-group row">\n  <label class="col-md-2 control-label" for="">Name</label>  \n  <div class="col-md-8">\n    <input ng-model="state.editItem.name" type="text" placeholder="Name" class="form-control input-md" />\n  </div>\n</div>\n<div class="form-group row">\n  <label class="col-md-2 control-label" for="">Content</label>  \n  <div class="col-md-8">\n    <input ng-model="state.editItem.content" type="text" placeholder="Classes" class="form-control input-md" />\n  </div>\n</div>\n<div class="form-group row">\n  <label class="col-md-2 control-label" for="">Classes</label>  \n  <div class="col-md-8">\n    <input ng-model="state.editItem.classes" type="text" placeholder="Name" class="form-control input-md" />\n  </div>\n</div>')}]),angular.module("menu-editor/entrytypes/text.tpl.html",[]).run(["$templateCache",function(a){a.put("menu-editor/entrytypes/text.tpl.html",'<div ng-class="item.classes">\n	<h5 ng-click="edit()">{{item.name}}</h5>\n	<p ng-click="edit()">{{item.content}}</p>\n</div>')}]),angular.module("menu-editor/entrytypes/ul.config.tpl.html",[]).run(["$templateCache",function(a){a.put("menu-editor/entrytypes/ul.config.tpl.html",'<div class="form-group row">\n  <label class="col-md-2 control-label" for="">Name</label>  \n  <div class="col-md-8">\n    <input ng-model="state.editItem.name" type="text" placeholder="Name" class="form-control input-md" />\n  </div>\n</div>\n<div class="form-group row">\n  <label class="col-md-2 control-label" for="">Classes</label>  \n  <div class="col-md-8">\n    <input ng-model="state.editItem.classes" type="text" placeholder="Classes" class="form-control input-md" />\n  </div>\n</div>\n<div class="row">\n  <fieldset class="col-md-12">\n    <legend>New item</legend>\n    <div class="input-group">\n      <div class="input-group-btn">\n        <button type="button" class="btn btn-default dropdown-toggle">{{menuEntryTypes[newItem.type].name}} <span class="caret"></span></button>\n        <ul class="dropdown-menu">\n          <li ng-repeat="id in menuEntryTypes[state.editItem.type].childs track by $index"><a ng-click="newItem.type = id">{{menuEntryTypes[id].name}}</a></li>\n        </ul>\n      </div>\n      <input type="text" class="form-control" placeholder="New item name" ng-model="newItem.name" />\n      <div class="input-group-btn">\n        <button class="btn btn-success" ng-click="addItem()">Add item</button>\n      </div>\n    </div>\n  </fieldset>\n</div>')}]),angular.module("menu-editor/entrytypes/ul.tpl.html",[]).run(["$templateCache",function(a){a.put("menu-editor/entrytypes/ul.tpl.html",'<ul ng-class="item.classes">\n	<h5 ng-click="edit()">{{item.name}}<h5>\n	<div ui-sortable ng-model="item.items">\n		<div ng-if="state.fresh" ng-repeat="inner in item.items" cn-menu-item cn-parent="item" cn-item="inner" cn-state="state"></div>\n	</div>\n</ul>')}]),angular.module("menu-editor/menu.tpl.html",[]).run(["$templateCache",function(a){a.put("menu-editor/menu.tpl.html",'<h1 class="page-header">\n  Menu {{menu.name}}<small><i class="icon-double-angle-right"></i> manage your menu</small>\n</h1>\n<blockquote>\nYou can edit your menu by click the item you wish to edit. Click the menu title to edit top level menu items. Click through your menu to edit those menu entries. You can also change the order of the menu by dragging and dropping the menu items to the place you want the item to be.\n</blockquote>\n<div>\n  <div ng-if="state.fresh" cn-menu-item cn-item="menu" cn-state="state"></div>\n  <div>\n    <div ng-if="state.showConfig">\n      <fieldset>\n        <legend>Edit menu item</legend>\n        <div cn-menu-item-config cn-menu="menu" cn-state="state" />\n      </fieldset>\n    </div>\n    <fieldset>\n      <legend>Menu actions</legend>\n      <button class="btn btn-success" ng-click="save()">Save</button>\n    </fieldset>\n  </div>\n</div>')}]),angular.module("menu-editor/menulist.tpl.html",[]).run(["$templateCache",function(a){a.put("menu-editor/menulist.tpl.html",'<h1 class="page-header">\n	Menu management\n	<small><i class="icon-double-angle-right"></i> edit your menus</small>\n</h1>\n<blockquote>You can edit or delete your menus, select a menu from the list below.</blockquote>\n<fieldset>\n	<legend>Menus</legend>\n	<table class="table table-striped">\n		<tr>\n			<th>Name</th>\n			<th>Actions</th>\n		</tr>\n		<tr ng-repeat="menu in menus">\n			<td>{{menu.name}}</td>\n			<td>\n				<button class="btn btn-success" ng-click="edit(menu)"><i class="fa fa-pencil"></i></button>\n				<button class="btn btn-danger" ng-click="remove(menu)"><i class="fa fa-trash-o"></i></button>\n			</td>\n		</tr>\n		<tr>\n			<td>\n				<div class="form-group">\n					<input ng-model="newName" type="text" placeholder="New menu name" class="form-control input-md" />\n				</div>\n			</td>\n			<td>\n				<button class="btn btn-success" ng-click="add(newName)">\n					<i class="fa fa-plus"></i> Add new menu\n				</button>\n			</td>\n		</tr>\n	</table>\n</fieldset>')}]);